[{"path":"https://higherx4racine.github.io/hercacstables/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Ben Taft Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/children_in_poverty.html","id":"families-by-standard-of-living","dir":"Articles","previous_headings":"","what":"Families by standard of living","title":"Children in Poverty","text":"American Community Survey table categorizes families according ratio income Federal poverty level community. Nowadays, Federal poverty level actually represent income threshold families really start struggling. actually measure real danger starving death. reason, Higher Expectations Racine County uses three times Federal poverty level threshold family-sustaining income. hercacstables package provides table, STANDARD_OF_LIVING_METADATA, describes classification. Income ratios ACS table B17026, classified standards living use table Census API look many families tract Census income bracket. , aggregate get counts families experiencing “Unsustainable” “Sustainable” standards living. can see economic situations two tracts different.","code":"RAW_STANDARD_OF_LIVING <- hercacstables::STANDARD_OF_LIVING_METADATA |>     dplyr::pull(         \"Variable\"     ) |>     hercacstables::fetch_data(         year = 2021L,         for_geo = \"tract\",         for_items = c(\"010400\", \"010500\"),         survey_type = \"acs\",         table_or_survey_code = \"acs5\",         state = 33L,         county = \"011\",         use_key = TRUE     )"},{"path":"https://higherx4racine.github.io/hercacstables/articles/children_in_poverty.html","id":"families-by-children-present","dir":"Articles","previous_headings":"","what":"Families by children present","title":"Children in Poverty","text":"need go counts families counts children, next look many families tract children. census table reports many families kids, kids 6, kids 6-17, . hercacstables package table, FAMILIES_WITH_CHILDREN_METADATA, describes relationship ACS variables presence/absence children. can use table query API get number families children census tracts interested . Notice difference query previous one variables asking . whole point hercacstables package help repeat asking many different pieces census information place. aggregate families “Children Present” “Children.” , see pretty substantial difference two tracts. Reassuringly, total number families sets data.","code":"RAW_FAMILIES_WITH_CHILDREN <- hercacstables::FAMILIES_WITH_CHILDREN_METADATA |>     dplyr::pull(         \"Variable\"     ) |>     hercacstables::fetch_data(         year = 2021L,         for_geo = \"tract\",         for_items = c(\"010400\", \"010500\"),         survey_type = \"acs\",         table_or_survey_code = \"acs5\",         state = 33L,         county = \"011\",         use_key = TRUE     )"},{"path":"https://higherx4racine.github.io/hercacstables/articles/children_in_poverty.html","id":"children-per-family-by-poverty-level","dir":"Articles","previous_headings":"","what":"Children per family by poverty level","title":"Children in Poverty","text":"last set raw data need number children living poverty. “, wait!” say, “Isn’t everything needed first place?” true, except best can get ACS table detailed information parents’ birth origins distinguishes three income tiers: less Federal poverty level, 1x-2x, 2x Federal poverty level. hercacstables package’s table CHILDREN_IN_POVERTY_METADATA describes variables table map parental place birth kid poverty. ’s query get data: want 3x poverty level, lump “less 1x” “1x-2x” tiers “Unsustainable,” leaving us “2x+” tier mixes “2x-3x” tier calling “Unsustainable” “3x+” tier calling “Sustainable.”","code":"RAW_CHILDREN_IN_POVERTY <- hercacstables::CHILDREN_IN_POVERTY_METADATA |>     dplyr::pull(         \"Variable\"     ) |>     hercacstables::fetch_data(         year = 2021L,         for_geo = \"tract\",         for_items = c(\"010400\", \"010500\"),         survey_type = \"acs\",         table_or_survey_code = \"acs5\",         state = 33L,         county = \"011\",         use_key = TRUE     )"},{"path":"https://higherx4racine.github.io/hercacstables/articles/children_in_poverty.html","id":"join-the-three-datasets","dir":"Articles","previous_headings":"","what":"Join the three datasets","title":"Children in Poverty","text":"three queries resulted data frame rows correspond census tracts, can join three results “tract” column. can also remove duplicate columns end just tract, number kids, number families, percentages families children sustainable standards living. table looks like: can see , case, actually need pull number families children. even nerdier dive, though, use fraction families children look poverty across demographics like race ethnicity. case, though, just need multiply total number children percentage families sustainable standard living.","code":"CHILDREN_BY_TRACT <- CHILDREN_IN_POVERTY |>     dplyr::inner_join(         FAMILIES_WITH_CHILDREN,         by = \"tract\"     ) |>     dplyr::inner_join(         STANDARD_OF_LIVING,         by = \"tract\"     ) |>     dplyr::select(         \"tract\",         \"Children\",         \"Mixed\",         \"Observed Unsustainable\" = \"Unsustainable.x\",         \"Families\" = \"Total\",         tidyselect::starts_with(\"Percent\")     ) SUSTAINABLE_KIDS <- CHILDREN_BY_TRACT |>     dplyr::mutate(         `Expected Unsustainable` = .data$Children * (1 - .data$`Percent Family-sustaining`),         `Extra Unsustainable` = .data$`Expected Unsustainable` - .data$`Observed Unsustainable`,         `Sustainable Kids` = .data$Mixed - .data$`Extra Unsustainable`,         `Percent kids in Sustainable` = .data$`Sustainable Kids` / .data$Children,         `Expected Sustainable` = .data$Children * .data$`Percent Family-sustaining`     )  SUSTAINABLE_KIDS |>     dplyr::select(         \"tract\",         \"Children\",         \"Percent Family-sustaining\",         \"Expected Sustainable\",         \"Expected Unsustainable\",         \"Mixed\",         \"Observed Unsustainable\",         \"Extra Unsustainable\",         \"Sustainable Kids\",         \"Percent kids in Sustainable\"     ) |>     knitr::kable()"},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"welcome","dir":"Articles","previous_headings":"","what":"Welcome","title":"hercacstables","text":"first time using hercacstables probably want register Census. Otherwise, welcome back! package helps R users access data United States Census Bureau, especially American Community Survey. database enormous amount information, stored versatile cumbersome format. Data stored hundreds different tables, called “groups,” give breakdowns information. example, group B21005 reports counts people according employment status, military service, age. row group reports value specific slice topic. example, row 5 group B21005 gives number employed veterans ages 18 34. Census combines group code row variable, B21005_005E. packing information gives Census flexible way report data. However, challenging user somehow know variables report data interested . light , hercacstables designed help people make repeated, efficient use Census’s API. metadata tables explicitly connect real-world concepts Census variables. can use database-style joins connect concepts values pull API.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"worked-example","dir":"Articles","previous_headings":"","what":"Worked example","title":"hercacstables","text":"want use Census API probably real-world question think data help answer. example, might ask populations changed Ohio’s four largest school districts? answer hercacstables, break four component questions.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"who","dir":"Articles","previous_headings":"Worked example","what":"Who?","title":"hercacstables","text":"population populations trying understand? help us identify groups variables specifically ask . thosee groups values can accessed offline hercacstables::METADATA_ACS5. want know populations school districts. makes sense look school-aged children, say 5-18. requests ask data kids age range. can built-table hercacstables::AGE_AND_SEX_METADATA. table can see need include six variables API query.","code":"school_children_metadata <- hercacstables::AGE_AND_SEX_METADATA |>     dplyr::filter(         .data$`Lower Age` >= 5,         .data$`Upper Age` <= 18     )  knitr::kable(school_children_metadata) SCHOOL_CHILDREN_VARIABLES <- school_children_metadata$variable print(SCHOOL_CHILDREN_VARIABLES) #> [1] \"B01001_004E\" \"B01001_005E\" \"B01001_006E\" \"B01001_028E\" \"B01001_029E\" #> [6] \"B01001_030E\""},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"where","dir":"Articles","previous_headings":"Worked example","what":"Where?","title":"hercacstables","text":"kind place, specific location, data describe? Census API can provide information many levels geographical detail. questions might pertain entire states. Others might involve comparisons among tracts metropolitan area. “geography” table hercacstables::METADATA_ACS5 provides list geographic levels. know real-world name place, numeric code Census uses , can look . question ’re dealing , want look geographic area served school district. actually three different kinds school district geographic levels. looks like specific geographic level ask “school districts (unified)”. “Containing Geographies” column lets us know also tell API state interested . “Wildcard Option” column tells us can use “*” say “states.” just want Ohio, must supply FIPS code. don’t know top head, can use page Census’s website search FIPS code specific geography. Ohio’s FIPS code 39.","code":"school_district_geographies <- hercacstables::METADATA_ACS5 |>     purrr::pluck(\"geography\") |>     dplyr::filter(stringr::str_detect(.data$`Geographic Level`, \"school\"))  school_district_geographies |>     knitr::kable() UNIFIED_SCHOOL_DISTRICT <- school_district_geographies$`Geographic Level`[3] print(UNIFIED_SCHOOL_DISTRICT) #> [1] \"school district (unified)\" STATE_FIPS <- 39"},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"when","dir":"Articles","previous_headings":"Worked example","what":"When?","title":"hercacstables","text":"request Census API must include year path. means takes multiple API calls pull data multiple years. calls identical others, except year path. repetitiveness might just single biggest motivator developing hercacstables. ’s easy R iterate array years, making one function call year, bundling results one tidy data frame. aspect “” question whether use 1-year 5-year estimates. ACS reports . Five-year estimates include data preceding four years. increases sample sizes enough provide information smaller geographic levels, like tracts block groups. One-year estimates responsive rapid changes (like unemployment COVID-19 pandemic, example), available larger geographic levels. Unified school districts large enough 1-year ACS include . example, use every year data available. 2005 2022, except 2020, 1-year ACS data.","code":"YEARS_FOR_ACS <- c(2005:2019, 2021:2022)"},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"what-describe-the-steps-to-answer-our-question","dir":"Articles","previous_headings":"Worked example","what":"What? Describe the steps to answer our question","title":"hercacstables","text":"Thus far, identified need deal “populations” (), “school districts” “Ohio” (), “changed” () aspects question. final aspect “four largest” parts. take three steps find four largest school districts Ohio. first step use hercacstables::fetch_data() function pull data Census API. need number children live school district Ohio recent year available. next step sum populations district sort biggest smallest. last step pull GEOIDs four biggest districts.","code":"fetch_district_children <- function(.state_fips, .year, .district_geoids = \"*\") {     hercacstables::fetch_data(         variables = c(\"NAME\", SCHOOL_CHILDREN_VARIABLES), # district names, too         year = .year,                                     # most recent year         survey_type = \"acs\",                              # American Community Survey         table_or_survey_code = \"acs1\",                    # One-year estimates         for_geo = UNIFIED_SCHOOL_DISTRICT,                # \"school district (unified)\"         for_items = .district_geoids,                     # every school district         state = STATE_FIPS                                # our state's two-digit code     ) }  latest_school_districts_raw <- fetch_district_children(STATE_FIPS, 2022)  latest_school_districts_raw |>     dplyr::slice_sample(n = 8) |>     knitr::kable() wrangle_latest_kids <- function(.raw_children){     .raw_children |>         dplyr::count(             .data$NAME,             .data[[UNIFIED_SCHOOL_DISTRICT]],             name = \"Children\",             wt = .data$Value         ) |>         dplyr::arrange(dplyr::desc(.data$Children)) }  latest_school_districts <- wrangle_latest_kids(latest_school_districts_raw)  latest_school_districts |>     dplyr::slice(1:8) |>     dplyr::mutate(Children = scales::label_comma(accuracy = 1)(.data$Children)) |>     knitr::kable(align = \"lrr\") top_district_geoids <- function(.districts, n){     .districts[[UNIFIED_SCHOOL_DISTRICT]][1:n] }  districts_for_query <- top_district_geoids(latest_school_districts, 4)  print(districts_for_query) #> [1] \"04380\" \"04378\" \"04375\" \"04490\""},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"pulling-it-all-together","dir":"Articles","previous_headings":"Worked example","what":"Pulling it all together","title":"hercacstables","text":"Now components need pull population histories four biggest school districts Ohio. First, fetch data. Notice can reuse fetching function defined ! Next, sum number children create human-readable names district. Finally, can plot results.  looks like maybe lot people moving Cleveland Columbus, taking kids .","code":"fetch_district_histories <- function(.state_fips, .district_geoids = \"*\") {     YEARS_FOR_ACS |>         purrr::map(             \\(.year) fetch_district_children(.state_fips,                                              .year,                                               .district_geoids)         ) |>         purrr::list_rbind() }   big_district_histories_raw <- fetch_district_histories(STATE_FIPS,                                                        districts_for_query) wrangle_histories <- function(.raw_district_histories, .latest_districts){     .raw_district_histories |>     dplyr::count(         .data[[UNIFIED_SCHOOL_DISTRICT]],         .data$Year,         name = \"Children\",         wt = .data$Value     ) |>     dplyr::inner_join(         dplyr::select(             .latest_districts,             tidyselect::all_of(c(\"NAME\", UNIFIED_SCHOOL_DISTRICT))             ),         by = UNIFIED_SCHOOL_DISTRICT     ) |>     dplyr::mutate(         District = stringr::str_extract(.data$NAME,                                         \"^\\\\S*\")     ) |>     dplyr::select(         \"District\",         \"Year\",         \"Children\"     ) }  big_district_histories <- wrangle_histories(big_district_histories_raw,                                             latest_school_districts) plot_district_histories <- function(.district_histories){     .district_histories |>         ggplot2::ggplot(             ggplot2::aes(                 x = .data$Year,                 y = .data$Children,                 color = .data$District             )         ) +         ggplot2::geom_line(             linewidth = 2         ) +         ggplot2::geom_point(             size = 5         ) +         ggplot2::scale_x_continuous(             name = NULL,             labels = scales::label_number(big.mark = \"\"),             breaks = scales::breaks_width(5),             minor_breaks = scales::breaks_width(1)         ) +         ggplot2::scale_y_continuous(             name = \"School-aged children in school district's area\",             labels = scales::label_comma(accuracy = 1,                                          scale = 0.001,                                          suffix = \"K\"),             limits = c(0, NA)         ) +         ggplot2::scale_color_discrete(             guide = ggplot2::guide_legend(title = NULL,                                           position = \"top\")         ) +         ggplot2::theme_minimal() }  plot_district_histories(big_district_histories)"},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"everything-is-reusable","dir":"Articles","previous_headings":"Worked example","what":"Everything is reusable","title":"hercacstables","text":"Now ’ve seen example Ohio, may thinking “question relevant .” However! rerun code, changing just STATE_FIPS state’s FIPS code, get analysis different state. Let’s look changes population five largest school districts Delaware.  thing state. ’s goal project: help define workflows making reports Census data can easily rerun comparable places times.","code":"STATE_FIPS <- 10  latest_de_districts <- STATE_FIPS |>     fetch_district_children(2022) |>     wrangle_latest_kids()  de_district_geoids <- latest_de_districts |>     top_district_geoids(5)  big_de_district_histories <- STATE_FIPS |>     fetch_district_histories(de_district_geoids) |>     wrangle_histories(latest_de_districts)  plot_district_histories(big_de_district_histories)"},{"path":"https://higherx4racine.github.io/hercacstables/articles/hercacstables.html","id":"set-up-your-api-key","dir":"Articles","previous_headings":"","what":"Set up your API key","title":"hercacstables","text":"use API key identify access data.census.gov. Like many public APIs, US Census Bureau’s data portal allows anonymous users. However, limits number requests anonymous user can send, per second per day. register site, send key. can use key identify making future calls. Chances never come kind throttling. make easy new users, hercacstables includes function, api_key_setup(), take sign-page help permanently save key local environment variable. variable called “CENSUS_API_KEY” compatible another popular package accessing Census API, tidycensus.","code":"api_key_setup()"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"preface","dir":"Articles","previous_headings":"","what":"Preface","title":"Race/Ethnicity Categories in ACS Tables","text":"American Community Survey API returns data terse format. response contains four parts: geographic information, table code, row number, value. geographic information varies level detail one asks . value number may population size, number households, income dollars, percentage, several quantities. table code row number determine exact meaning value. Generally speaking, values table reporting kind information. , information might counts people households, incomes costs dollars, hours commuting working, percentage just anything. row numbers let know group people information . first row always value entire population geographic area. Subsequent rows may information specific subgroup, may contain summary value combination subgroups. example, sex--age table, might find value men boys (males) row 2, value boys 5 row 3. short, lot information packed two fields table name row number. packing information efficient storing transmitting data, means users Census information must unpack things order clear. hercacstables package many tools metadata tables make easier convenient unpack Census data.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"racial-and-ethnic-categories-in-the-american-community-survey","dir":"Articles","previous_headings":"","what":"Racial and ethnic categories in the American Community Survey","title":"Race/Ethnicity Categories in ACS Tables","text":"vignette describes features hercacstables help common repetitive chores unpacking racial ethnic data Census API responses. Census several ways reports racial ethnic identity. always agree line . makes sense concepts race ethnicity slippery, changing across place time.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"broad-strokes-by-the-census","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey","what":"Broad strokes by the Census","title":"Race/Ethnicity Categories in ACS Tables","text":"first racial/ethnic system discuss involves ten categories. seven categories race, one ethnicity, one combines , “” category: “Total”, “White alone”, “Black African American alone”, “American Indian Alaska Native alone”, “Asian alone”, “Native Hawaiian Pacific Islander alone”, “Race alone”, “Two Races”, “White alone, Hispanic Latino”, “Hispanic Latino”. coarse unsophisticated way characterizing identities. Nevertheless, occurs throughout American Community Survey.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"subtable-categories-of-race-and-ethnicity","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey","what":"Subtable categories of race and ethnicity","title":"Race/Ethnicity Categories in ACS Tables","text":"47 separate sets tables subdivide information according ten-category scheme. identity designated suffix end table’s name. words, values table one suffixes name pertain people just one racial/ethnic category. Since case common, hercacstables describes metadata table RACE_ETHNICITY_SUBTABLE_METADATA. maps suffix table’s name racial/ethnic category table describes.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"tables-with-race-in-their-description","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey","what":"Tables with “RACE” in their description","title":"Race/Ethnicity Categories in ACS Tables","text":"also 0 tables word “RACE” description. seem fall four categories. two tables 10 rows , B02001 B25006. probably convenience tables pull data race-specific subtables. Six tables, B02008 B020013, one row . seem report inclusive counts, combining people claim racial identity either sole identity combination another. One table, B03002, 21 rows. table appears report detailed information Hispanic ethnicity specific racial identities. Tables B98013 B99021 descriptions suggest report methodological details. categories table deserves little discussion.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"convenience-tables","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description","what":"Convenience tables","title":"Race/Ethnicity Categories in ACS Tables","text":"Tables B02001 B25006 deal counts individuals households, respectively. seem redundant, showing first rows tables B01001 B11001, respectively. can use hercacstables check .","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"map-meaning-to-census-variables","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description > Convenience tables","what":"Map meaning to Census Variables","title":"Race/Ethnicity Categories in ACS Tables","text":"first step make table connects Census’s opaque variable names real-world meanings interested . example, tables B01001* B02001 deal counts people, tables B11001* B25006 deal counts households. Similarly, racial identity counted defined either subtable suffix row number. Finally, interested whether data come , subtable convenience table. can lay way “maps” Census variable real-world meaning.","code":"convenience_check_variables <- tibble::tribble(     ~ Table,  ~ Suffix,   ~ Index, ~ Population, ~ Race,     \"B01001\", \"A\",              1, \"People\",     \"White\",     \"B01001\", \"B\",              1, \"People\",     \"Black\",     \"B02001\", \"\",               2, \"People\",     \"White\",     \"B02001\", \"\",               3, \"People\",     \"Black\",     \"B11001\", \"A\",              1, \"Households\", \"White\",     \"B11001\", \"B\",              1, \"Households\", \"Black\",     \"B25006\", \"\",               2, \"Households\", \"White\",     \"B25006\", \"\",               3, \"Households\", \"Black\" ) |>     dplyr::mutate(         Group = paste0(.data$Table, .data$Suffix),         Variable = build_api_variable(group_code = .data$Table,                                       race_code = .data$Suffix,                                       item_number = .data$Index),         `Table Type` = dplyr::if_else(nchar(.data$Suffix) > 0,                                       \"Subtable\",                                       \"Convenience\")     )  knitr::kable(convenience_check_variables)"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"fetch-the-raw-data","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description > Convenience tables","what":"Fetch the raw data","title":"Race/Ethnicity Categories in ACS Tables","text":"variables defined, can fetch data Census API. Notice , since API call, code block set cache results. API calls much slower local functions, usually good idea isolate run times possible.","code":"convenience_check_values_raw <- fetch_data(     convenience_check_variables$Variable,     year = 2022,                  # the most recent one available at the time of writing     for_geo = \"us\",               # the entire nation     for_items = \"*\",              # all nation-level geographies     survey_type = \"acs\",          # as opposed to, e.g. \"dec,\" for Decennial survey data     table_or_survey_code = \"acs5\" # the specific survey is the 5-year ACS. )"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"examine-values-in-context","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description > Convenience tables","what":"Examine values in context","title":"Race/Ethnicity Categories in ACS Tables","text":"Now raw data, can check see values convenience tables , fact, match values subtables. don’t include confusing “Group,” “Index,” “Variable” columns final result.","code":"convenience_check_values <- convenience_check_values_raw |>     dplyr::inner_join(         convenience_check_variables,         by = c(\"Group\", \"Index\")     ) |>     dplyr::select(         \"Population\",         \"Race\",         \"Table Type\",         \"Value\"     ) |>     tidyr::pivot_wider(         names_from = \"Table Type\",         values_from = \"Value\"     ) |>     dplyr::mutate(         Identical = dplyr::if_else(.data$Subtable == .data$Convenience,                                    \"Yes\",                                    \"No\")     )  convenience_check_values |>     dplyr::mutate(         dplyr::across(tidyselect::all_of(c(\"Subtable\", \"Convenience\")),                       scales::label_comma(accuracy = 1))     ) |>     knitr::kable(         align = \"llrrl\"     )"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"inclusive-identity-counts","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description","what":"Inclusive identity counts","title":"Race/Ethnicity Categories in ACS Tables","text":"Six others, tables “B02008” “B02013”, show numbers people identified specific races ethnicities. totals tables larger US population someone identified one category counted corresponding table. tables correspond six ten broad categories race/ethnicity, actually already RACE_ETHNICITY_SUBTABLE_METADATA. just hid confusing. population reported inclusive tables large, larger, population reported exclusive tables. can use hercacstables check , .","code":""},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"census-variables-for-inclusive-and-exclusive-counts","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description > Inclusive identity counts","what":"Census variables for inclusive and exclusive counts","title":"Race/Ethnicity Categories in ACS Tables","text":"","code":"incl_excl_pop_variables <- RACE_ETHNICITY_SUBTABLE_METADATA |>     dplyr::filter(         nchar(.data$`Inclusive Group`) > 0     ) |>     dplyr::mutate(         `Exclusive Group` = paste0(\"B01001\", .data$Suffix)     ) |>     dplyr::select(         \"Census Race\",         Inclusive = \"Inclusive Group\",         Exclusive = \"Exclusive Group\"     ) |>     tidyr::pivot_longer(         cols = tidyselect::ends_with(\"clusive\"),         names_to = \"Type of count\",         values_to = \"Group\"     ) |>     dplyr::mutate(         Variable = build_api_variable(.data$Group, 1)     )  knitr::kable(incl_excl_pop_variables)"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"raw-inclusive-and-exclusive-counts","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description > Inclusive identity counts","what":"Raw inclusive and exclusive counts","title":"Race/Ethnicity Categories in ACS Tables","text":"","code":"incl_excl_pop_values_raw <- fetch_data(     variables = incl_excl_pop_variables$Variable,     year = 2022,     for_geo = \"us\",     for_items = \"*\",     survey_type = \"acs\",     table_or_survey_code = \"acs5\" )"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"comparing-inclusive-and-exclusive-counts","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description > Inclusive identity counts","what":"Comparing inclusive and exclusive counts","title":"Race/Ethnicity Categories in ACS Tables","text":"","code":"incl_excl_pop_values <- incl_excl_pop_values_raw |>     dplyr::inner_join(         incl_excl_pop_variables,         by = c(\"Group\")     ) |>     dplyr::select(         \"Census Race\",         \"Type of count\",         \"Value\"     ) |>     tidyr::pivot_wider(         names_from = \"Type of count\",         values_from = \"Value\"     ) |>     dplyr::mutate(         Difference = .data$Inclusive - .data$Exclusive,         `Percent Multiracial` = .data$Difference / .data$Inclusive     ) |>     dplyr::arrange(         dplyr::desc(.data$Inclusive)     )  incl_excl_pop_values |>     dplyr::mutate(         dplyr::across(tidyselect::all_of(c(\"Inclusive\",                                            \"Exclusive\",                                            \"Difference\")),                       scales::label_comma(accuracy = 1)),         `Percent Multiracial` = scales::label_percent(accuracy = 1)(             .data$`Percent Multiracial`         )     ) |>     knitr::kable(         align = \"lrrrr\"     )"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"hispanic-ethnicity-and-broad-racial-identity","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description","what":"Hispanic ethnicity and broad racial identity","title":"Race/Ethnicity Categories in ACS Tables","text":"Table B03002 contains counts people Hispanic ethnicity ten broad racial identities. always, first row total population size. two groups rows. Rows 2-11 count people Hispanic. Rows 12-21 count people identify Hispanic. Rows 2 12 total populations non-Hispanic Hispanic people. Rows 10, 11, 20, 21 contain subgroupings distinguish people identify biracial identify multiracial. means can take rows one eight RACE_ETHNICITY_SUBTABLE_METADATA map onto rows B03002. fact, useful also included RACE_ETHNICITY_SUBTABLE_METADATA. Let’s use look nationwide trends across racial identities percentages Hispanic ethnicity. First, define metadata table. Next, pull 13 years ACS data. , put data nice, tidy format. Finally, plot ","code":"hispanic_and_broad_race_variables <- RACE_ETHNICITY_SUBTABLE_METADATA |>     dplyr::filter(         nchar(.data$`non-Hispanic`) > 0     ) |>     dplyr::select(         \"Census Race\",         \"non-Hispanic\",         \"Hispanic\"     ) |>     tidyr::pivot_longer(         cols = tidyselect::ends_with(\"Hispanic\"),         names_to = \"Ethnicity\",         values_to = \"Variable\"     ) |>     tidyr::separate_wider_position(         cols = \"Variable\",         widths = c(Group = 6, 1,                    Index = 3,                    1),         cols_remove = FALSE     ) |>     dplyr::mutate(         Index = as.integer(.data$Index)     )  knitr::kable(hispanic_and_broad_race_variables) hispanic_and_broad_race_raw <- c(2009:2019, 2021:2022) |>     purrr::map(         ~ fetch_data(             hispanic_and_broad_race_variables$Variable,             year = .,             for_geo = \"us\",             for_items = \"*\",             survey_type = \"acs\",             table_or_survey_code = \"acs1\"         )     ) hispanic_and_broad_race <- hispanic_and_broad_race_raw |>     purrr::list_rbind() |>     dplyr::inner_join(         hispanic_and_broad_race_variables,         by = \"Index\"     ) |>     dplyr::select(         \"Census Race\",         \"Ethnicity\",         \"Year\",         \"Value\"     ) |>     tidyr::pivot_wider(         names_from = \"Ethnicity\",         values_from = \"Value\",         values_fill = 0     ) |>     dplyr::mutate(         Total = .data$Hispanic + .data$`non-Hispanic`,         `Percent Hispanic` = .data$Hispanic / .data$Total     )      hispanic_and_broad_race |>     dplyr::slice_sample(         n = 1,         by = \"Year\"     ) |>     dplyr::mutate(         dplyr::across(c(\"Hispanic\", \"non-Hispanic\", \"Total\"),                       scales::label_comma(accuracy = 1)),         dplyr::across(\"Percent Hispanic\",                       scales::label_percent(accuracy = 1))     ) |>     knitr::kable(         align = \"lrrrrr\"     ) hispanic_and_broad_race |>     dplyr::mutate(         `Census Race` = stringr::str_to_title(.data$`Census Race`)     ) |>     ggplot2::ggplot(         ggplot2::aes(x = .data$Year,                      y = .data$`Percent Hispanic`,                      color = .data$`Census Race`)     ) +     ggplot2::geom_line(         linewidth = 1,         lineend = \"round\",         linejoin = \"mitre\"     ) +     ggplot2::geom_point(         size = 3     ) +     ggplot2::scale_x_continuous(         name = NULL,         labels = scales::label_number(big.mark = \"\"),         limits = c(2005, 2025),         breaks = scales::breaks_width(5),         minor_breaks = scales::breaks_width(1)     ) +     ggplot2::scale_y_continuous(         name = \"Percentage Hispanic\",         labels = scales::label_percent(accuracy = 1),         limits = c(0, 1),         breaks = scales::breaks_width(0.2),         minor_breaks = scales::breaks_width(0.05)     ) +     ggplot2::scale_color_discrete(         guide = ggplot2::guide_legend(             title = NULL,             position = \"top\",             nrow = 4         )     ) +     ggplot2::theme_minimal()"},{"path":"https://higherx4racine.github.io/hercacstables/articles/race_ethnicity_categories.html","id":"methodological-detail-tables","dir":"Articles","previous_headings":"Racial and ethnic categories in the American Community Survey > Tables with “RACE” in their description","what":"Methodological detail tables","title":"Race/Ethnicity Categories in ACS Tables","text":"Tables B98013 B99021 give information Census’s data collection methods. Statisticians can use describe much uncertainty data concerning racial identities. can skip .","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Taft. Author, maintainer.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taft B (2024). hercacstables: Work American Community Survey Tables US Census API. R package version 0.0.0.9000, https://higherx4racine.github.io/hercacstables/.","code":"@Manual{,   title = {hercacstables: Work with American Community Survey Tables through the US Census API},   author = {Ben Taft},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://higherx4racine.github.io/hercacstables/}, }"},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Work with American Community Survey Tables through the US Census API","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"higherX4Racine/hercacstables\")"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Work with American Community Survey Tables through the US Census API","text":"American Community Survey (ACS) US Census’s website returns data weirdly idiosyncratic way. many subtotals table. Grouping variables organized tree-like, rather tabular fashion. package intended make easy access use ACS data R. Many questions work Census data follow common pattern: [measurement] differ among [demographic groups] across [geographic levels] [geographic area] [span time]? Measurement huge number things Census keeps track . Measurements arranged tables (called “groups”) rows. drawing maps, determines color area. Examples include population size (table B01001 others), median household income (table B19013 others), types computers household (table B28001), number vehicles used commuting (table B08015). Demographic Group subset population shares specific traits. Demographic groups can represented either groups (common reporting race ethnicity) rows (cases, like age, sex, veteran status). drawing maps, probably different version map demographic grouping. Examples include number Hispanic girls 5 years old (table B01001I, row 18), median income Asian American households (table B19013D, row 1), number households computer (table B28001, row 11), number vehicles used women commuting (table B08015, row 3). Geographic Level Census-defined hierarchy whole country small blocks. level interested determined scale question. drawing maps, areas appeared different colors. Examples include congressional districts, incorporated cities, school districts, Census tracts. Geographic Area set specific instances one geographic levels. full geographic scope question. drawing maps, determine scale. Examples include whole states, metropolitan areas, Census-designated places, counties.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"the-workflow","dir":"","previous_headings":"","what":"The workflow","title":"Work with American Community Survey Tables through the US Census API","text":"Use hercacstables::METADATA_ACS5 ! may need several pulling data several groups. Use hercacstables::METADATA_ACS5 , ! often small, like tract county subdivision. larger, like state county. Create lookup table maps geographic ids meaningful names. often always use variables (step 1) may need parameterized geography ’re pulling multiple levels always parameterized year can reuse probably involve using dplyr::inner_join fetched data lookup tables. can also perform calculations like aggregating finding remainders. Cache result API calls slow Save results , e.g. base::saveRDS.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Work with American Community Survey Tables through the US Census API","text":"Let’s say want ask question: [number households] differ [Hispanic non-Hispanic people] across [Manchester, Nashua, suburban areas] [Hillsborough County, NH] [last 10 years]?","code":""},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"find-the-measurement-and-demographic-groups","dir":"","previous_headings":"Example","what":"find the measurement and demographic groups","title":"Work with American Community Survey Tables through the US Census API","text":"First, find variables describe numbers households. One way search hercacstables::METADATA_ACS5 groups whose “Universe” “Households” whose “Description” contains “Hispanic” “Ethnicity.” group’s “Universe” describes measuring, often telling units whatever values . group’s “Description” phrase summarizes reports. looks like best bet group “B11001I.” likely group “B11001” contains counts households race. first row groups total value across demographic subset keeps track . Since question ask different household types, probably just need row one groups “B11001” “B11001I.” gives us good opportunity document ethnicities counted .","code":"hercacstables::METADATA_ACS5 |>     purrr::pluck(\"groups\") |>     dplyr::filter(stringr::str_detect(.data$Universe, \"Household\"),                   stringr::str_detect(.data$Description, \"Hispanic|Ethnic\")) |>     gt::gt() HOUSEHOLD_GROUPS <- c(\"B11001\", \"B11001I\") household_variables <- hercacstables::METADATA_ACS5 |>     purrr::pluck(\"variables\") |>     dplyr::filter(.data$Group %in% HOUSEHOLD_GROUPS,                   .data$Index == 1) |>     dplyr::mutate(         Ethnicity = dplyr::case_match(.data$Group,                                       \"B11001\" ~ \"All\",                                       \"B11001I\" ~ \"Hispanic or Latino\")     ) |>     dplyr::select(\"Group\", \"Index\", \"Variable\", \"Ethnicity\")  household_variables |>     gt::gt()"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"find-the-geographic-levels-and-geographic-area","dir":"","previous_headings":"Example","what":"find the geographic levels and geographic area","title":"Work with American Community Survey Tables through the US Census API","text":"next step find codes related geographic areas levels. need know FIPS code state, county, two cities. also need know geographic level ’re working “county subdivision.” last part step, define lookup table translate FIPS codes different geographies human-readable name.","code":"NEW_HAMPSHIRE <- \"33\" COUNTY_LEVEL <- \"county\" HILLSBOROUGH_CO <- \"011\" CITY_LEVEL <- \"county subdivision\" MANCHESTER_NH <- \"45140\" NASHUA_NH <- \"50260\"  geography_definitions <- tibble::tribble(     ~ FIPS,          ~ Location,     HILLSBOROUGH_CO, \"County-wide\",     MANCHESTER_NH,   \"Manchester\",     NASHUA_NH,       \"Nashua\" )"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"find-the-time-interval","dir":"","previous_headings":"Example","what":"find the time interval","title":"Work with American Community Survey Tables through the US Census API","text":"last ten years available Census , 2024-09-13, 2012 2022. can use 1-year estimates question dealing geographic levels 50,000 people . gives us year--year precision, although mean exclude 2020. 1-year ACS estimates 2020 COVID-19 pandemic.","code":"YEARS_INCLUDED <- c(2012:2019, 2021:2022)"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"define-functions-that-use-the-api","dir":"","previous_headings":"Example","what":"define functions that use the API","title":"Work with American Community Survey Tables through the US Census API","text":"need make multiple calls API, makes sense create reusable functions. need two calls per year. first one pull county-wide household counts. second one pull household counts city. function “year” argument can reuse .","code":"generalized_fetch_data <- function(.year, .level, .areas, ...) {     hercacstables::fetch_data(         variables = household_variables$Variable,         year = .year,         survey_type = \"acs\",         table_or_survey_code = \"acs1\",         for_geo = .level,         for_items = .areas,         state = NEW_HAMPSHIRE,         ...     ) }  fetch_county_households <- function(.year){     generalized_fetch_data(.year,                            \"county\",                            HILLSBOROUGH_CO) }  fetch_city_households <- function(.year){     generalized_fetch_data(.year,                            CITY_LEVEL,                            c(MANCHESTER_NH,                              NASHUA_NH),                            county = HILLSBOROUGH_CO) }  fetch_example_data <- function(.year) {     dplyr::bind_rows(         fetch_county_households(.year),         fetch_city_households(.year)     ) }"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"fetch-the-data","dir":"","previous_headings":"Example","what":"fetch the data","title":"Work with American Community Survey Tables through the US Census API","text":"hercacstables starts come . define fetching process times possible, just tweaking related cases. leads lot code reuse efficiency, especially reports just need update year.","code":"raw_households <- YEARS_INCLUDED |>     purrr::map(fetch_example_data) |>     purrr::list_rbind() raw_households |>     dplyr::filter(.data$Year == 2022) |>     gt::gt() |>     gt::fmt_integer(columns = \"Value\")"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"wrangle-the-data","dir":"","previous_headings":"Example","what":"wrangle the data","title":"Work with American Community Survey Tables through the US Census API","text":"raw data usable. Several columns still codes, rather human-readable values. value column also explicitly state values suburban non-Hispanic folks. “wrangling” process addressing drawbacks.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"map-codes-to-words","dir":"","previous_headings":"Example > wrangle the data","what":"map codes to words","title":"Work with American Community Survey Tables through the US Census API","text":"get rid columns Census database codes create columns location demographics human-readable values.","code":"households <- raw_households |>     dplyr::inner_join(         household_variables,         by = c(\"Group\", \"Index\")     ) |>     dplyr::mutate(         FIPS = dplyr::coalesce(.data$`county subdivision`,                                .data$county)     ) |>     dplyr::inner_join(         geography_definitions,         by = \"FIPS\"     ) |>     dplyr::select(         \"Location\",         \"Year\",         \"Ethnicity\",         Households = \"Value\"     )  households |>     dplyr::filter(.data$Year == 2022) |>     gt::gt() |>     gt::fmt_integer(columns = \"Households\")"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"compute-implicit-values","dir":"","previous_headings":"Example > wrangle the data","what":"compute implicit values","title":"Work with American Community Survey Tables through the US Census API","text":"Now columns human-readable, can compute values actually interested . computation involves subtracting either cities’ households county’s, number Hispanic households total number households. task turns frequently dealing Census data, package includes helper function : hercacstables::subtract_parts_from_whole. function remove rows contain -groups category. case, must remove calculations come correctly.","code":"households <- households |>     hercacstables::subtract_parts_from_whole(         grouping_column = \"Location\",         value_column = \"Households\",         whole_name = \"County-wide\",         part_names = c(\"Manchester\", \"Nashua\"),         remainder_name = \"Suburbs\"     ) |>     dplyr::select(         !\"County-wide\"     ) |>     hercacstables::subtract_parts_from_whole(         grouping_column = \"Ethnicity\",         value_column = \"Households\",         whole_name = \"All\",         part_names = \"Hispanic or Latino\",         remainder_name = \"Not Hispanic or Latino\"     ) |>     dplyr::select(         !\"All\"     )  households |>     dplyr::filter(.data$Year == 2022) |>     gt::gt() |>     gt::fmt_integer(columns = \"Households\")"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"answer-the-question","dir":"","previous_headings":"Example","what":"Answer the question","title":"Work with American Community Survey Tables through the US Census API","text":"Now can finally look trends number households Hillsborough County, NH, comparing Hispanic non-Hispanic households among Manchester, Nashua, suburbs.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"visualize","dir":"","previous_headings":"Example > Answer the question","what":"visualize","title":"Work with American Community Survey Tables through the US Census API","text":"first step make graphs. data 4-dimensional involve time, location, ethnicity, number households. means ’ll need one graph. looked tables number Hispanic households much lower non-Hispanic households three locations. Let’s make two-panel graph, panel shows one ethnicity. way can separate y axes. graphs time x-axis, number households y, designate location color points lines.  looks like number households growing, non-Hispanic households increasing suburbs Hispanic households increasing cities.","code":"households |>     ggplot2::ggplot(         ggplot2::aes(             x = .data$Year,             y = .data$Households,             color = .data$Location,             group = .data$Location         )     ) +     ggplot2::geom_line(         linewidth = 2     ) +     ggplot2::geom_point(         size = 5     ) +     ggplot2::scale_x_continuous(         name = NULL,         breaks = scales::breaks_width(5),         minor_breaks = scales::breaks_width(1)     ) +     ggplot2::scale_y_continuous(         name = \"Number of households\",         limits = c(0, NA),         labels = scales::label_comma(accuracy = 1)     ) +     ggplot2::scale_color_viridis_d(         name = NULL,         guide = ggplot2::guide_legend(position = \"top\")     ) +     ggplot2::facet_grid(         rows = ggplot2::vars(.data$Ethnicity),         scales = \"free_y\"     )"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"analyze","dir":"","previous_headings":"Example > Answer the question","what":"analyze","title":"Work with American Community Survey Tables through the US Census API","text":"Let’s test ANCOVA. ’ll subtract 2012 year intercept estimate gives us value 2012, AD 0. always like look ANOVA table first get 10,000 meter view try interpret specific parameters. looks like EVERYTHING significant, let’s look parameters near-significant range.","code":"household_model <- households |>     dplyr::mutate(         Year = .data$Year - 2012,         Location = factor(.data$Location,                           levels = c(\"Suburbs\",                                      \"Manchester\",                                      \"Nashua\")),         Ethnicity = factor(.data$Ethnicity,                            levels = c(\"Not Hispanic or Latino\",                                       \"Hispanic or Latino\"))     ) |>     lm(Households ~ Year * Ethnicity * Location,        data = _) household_model |>     anova() |>     broom::tidy() |>     gt::gt() |>     gt::fmt_engineering(columns = c(\"sumsq\",                                     \"meansq\")) |>     gt::fmt_number(columns = \"statistic\",                    n_sigfig = 4) |>     gt::fmt_number(columns = \"p.value\",                    decimals = 4) household_model |>     broom::tidy() |>     dplyr::filter(         .data$`p.value` < 0.1     ) |>     gt::gt() |>     gt::fmt_number(columns = c(\"estimate\",                                \"std.error\",                                \"statistic\"),                    n_sigfig = 4) |>     gt::fmt_number(columns = \"p.value\",                    decimals = 4)"},{"path":"https://higherx4racine.github.io/hercacstables/index.html","id":"summarize","dir":"","previous_headings":"Example > Answer the question","what":"summarize","title":"Work with American Community Survey Tables through the US Census API","text":"number households Hillsborough county overall grew 2012-2022. number Hispanic households much higher two cities suburban parts county. difference became pronounced decade, two reasons. number Hispanic households grew quickly Nashua Manchester suburban areas. number non-Hispanic households grew quickly suburbs cities. Isn’t nice visual patterns corroborated significant statistics?","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/AGE_AND_SEX_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"The fundamental demographics of age and sex from table B01001 — AGE_AND_SEX_METADATA","title":"The fundamental demographics of age and sex from table B01001 — AGE_AND_SEX_METADATA","text":"age splits detailed whole-population table tables pertain specific racial identities. future project add second part table maps tables' rows age sex.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/AGE_AND_SEX_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The fundamental demographics of age and sex from table B01001 — AGE_AND_SEX_METADATA","text":"","code":"AGE_AND_SEX_METADATA"},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/AGE_AND_SEX_METADATA.html","id":"age-and-sex-metadata","dir":"Reference","previous_headings":"","what":"AGE_AND_SEX_METADATA","title":"The fundamental demographics of age and sex from table B01001 — AGE_AND_SEX_METADATA","text":"data frame 49 rows 6 columns. group Always \"B01001\" index row source table metadata row describes. variable full variable name, e.g. \"B01001_001E\" Sex One \",\" \"Male,\" \"Female\" Lower Age inclusive, [-999, 85] Upper Age inclusive, [4, 999]","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/AGE_AND_SEX_METADATA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The fundamental demographics of age and sex from table B01001 — AGE_AND_SEX_METADATA","text":"https://api.census.gov/data/2022/acs/acs1/groups/B01001.html","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_IN_POVERTY_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize ACS variables about children living in poverty and parents' birth origins — CHILDREN_IN_POVERTY_METADATA","title":"Categorize ACS variables about children living in poverty and parents' birth origins — CHILDREN_IN_POVERTY_METADATA","text":"data come table B05010, \"RATIO INCOME POVERTY LEVEL PAST 12 MONTHS NATIVITY CHILDREN 18 YEARS FAMILIES SUBFAMILIES LIVING ARRANGEMENTS NATIVITY PARENTS.\"","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_IN_POVERTY_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize ACS variables about children living in poverty and parents' birth origins — CHILDREN_IN_POVERTY_METADATA","text":"","code":"CHILDREN_IN_POVERTY_METADATA"},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_IN_POVERTY_METADATA.html","id":"children-in-poverty-metadata","dir":"Reference","previous_headings":"","what":"CHILDREN_IN_POVERTY_METADATA","title":"Categorize ACS variables about children living in poverty and parents' birth origins — CHILDREN_IN_POVERTY_METADATA","text":"data frame 15 rows 8 columns Group table, always \"B05010\" Variable full variable name, e.g. \"B05010_001E\" Index row variable table Least Poverty Ratio lowest ratio income poverty level tier Greatest Poverty Ratio highest ratio income poverty level tier Standard Living One \"Unsustainable,\" \"Mixed\" Native-born Parents many parents household born USA. Foreign-born Parents many parents household born USA.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_IN_POVERTY_METADATA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Categorize ACS variables about children living in poverty and parents' birth origins — CHILDREN_IN_POVERTY_METADATA","text":"https://api.census.gov/data/2022/acs/acs1/groups/B05010.html","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_PER_FAMILY_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize ACS variables about children per family — CHILDREN_PER_FAMILY_METADATA","title":"Categorize ACS variables about children per family — CHILDREN_PER_FAMILY_METADATA","text":"data come table B17026, \"CHILDREN 18 YEARS FAMILY TYPE AGE\"","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_PER_FAMILY_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize ACS variables about children per family — CHILDREN_PER_FAMILY_METADATA","text":"","code":"CHILDREN_PER_FAMILY_METADATA"},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_PER_FAMILY_METADATA.html","id":"children-per-family-metadata","dir":"Reference","previous_headings":"","what":"CHILDREN_PER_FAMILY_METADATA","title":"Categorize ACS variables about children per family — CHILDREN_PER_FAMILY_METADATA","text":"data frame 15 rows 6 columns Group table, always \"B09002\" Variable full variable name, e.g. \"B09002_001E\" Index row variable table Adults adult(s) heading household Lower Age age youngest children counted variable Upper Age age oldest children counted variable","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/CHILDREN_PER_FAMILY_METADATA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Categorize ACS variables about children per family — CHILDREN_PER_FAMILY_METADATA","text":"https://api.census.gov/data/2022/acs/acs1/groups/B09002.html","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/DECENNIAL_POPULATION_FIELDS.html","id":null,"dir":"Reference","previous_headings":"","what":"Variables from the Decennial censuses — DECENNIAL_POPULATION_FIELDS","title":"Variables from the Decennial censuses — DECENNIAL_POPULATION_FIELDS","text":"Variables Decennial censuses","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/DECENNIAL_POPULATION_FIELDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variables from the Decennial censuses — DECENNIAL_POPULATION_FIELDS","text":"","code":"DECENNIAL_POPULATION_FIELDS"},{"path":"https://higherx4racine.github.io/hercacstables/reference/DECENNIAL_POPULATION_FIELDS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Variables from the Decennial censuses — DECENNIAL_POPULATION_FIELDS","text":"tibble five columns Year year decennial census. Group table variables come . Race/Ethnicity OMB label race/ethnic group. Index row table corresponds race/ethnicity. Variable name variable API call","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_LEVELS.html","id":null,"dir":"Reference","previous_headings":"","what":"Census labels for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_LEVELS","title":"Census labels for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_LEVELS","text":"census breaks educational attainment different levels detail different tables. example, 8 levels B15001, 5 C15002* tables. row table connects detailed level broader one.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_LEVELS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Census labels for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_LEVELS","text":"","code":"EDUCATIONAL_ATTAINMENT_LEVELS"},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_LEVELS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Census labels for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_LEVELS","text":"tibble two columns Detailed factor 8 levels Broad factor 5 levels","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_LEVELS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Census labels for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_LEVELS","text":"https://api.census.gov/data","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Census variables for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_METADATA","title":"Census variables for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_METADATA","text":"census breaks educational attainment different levels detail different tables. example, 8 levels B15001, 5 C15002* tables B17003. row table connects detailed level broader one.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Census variables for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_METADATA","text":"","code":"EDUCATIONAL_ATTAINMENT_METADATA"},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_METADATA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Census variables for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_METADATA","text":"list three data frames sex_age : data frame eight variables group     : chr index     : int variable  : chr Sex       : chr Lower Age : int Upper Age : int Age       : chr Education : Factor race_ethnicity : data frame ten variables group                 : chr index                 : int Sex                   : chr Lower Age             : int Upper Age             : int Age                   : chr Education             : Factor Suffix                : chr Census Race/Ethnicity : chr variable              : chr poverty : data frame six variables group     : chr index     : int variable  : chr Sex       : chr Education : Factor Poverty   : chr Lower Age : int Upper Age : int Age       : chr","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EDUCATIONAL_ATTAINMENT_METADATA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Census variables for different levels of educational achievement — EDUCATIONAL_ATTAINMENT_METADATA","text":"https://api.census.gov/data","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EMPLOYMENT_STATUS_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor values associated with specific rows within employment-related ACS tables — EMPLOYMENT_STATUS_METADATA","title":"Factor values associated with specific rows within employment-related ACS tables — EMPLOYMENT_STATUS_METADATA","text":"Factor values associated specific rows within employment-related ACS tables","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EMPLOYMENT_STATUS_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor values associated with specific rows within employment-related ACS tables — EMPLOYMENT_STATUS_METADATA","text":"","code":"EMPLOYMENT_STATUS_METADATA"},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/EMPLOYMENT_STATUS_METADATA.html","id":"employment-status-metadata","dir":"Reference","previous_headings":"","what":"EMPLOYMENT_STATUS_METADATA","title":"Factor values associated with specific rows within employment-related ACS tables — EMPLOYMENT_STATUS_METADATA","text":"data frame 439 rows 12 columns: group  index  variable  Sex  Lower Age  Upper Age  Labor Force  Enlistment  Employment  Suffix  Census Race/Ethnicity  Poverty","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/EMPLOYMENT_STATUS_METADATA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Factor values associated with specific rows within employment-related ACS tables — EMPLOYMENT_STATUS_METADATA","text":"api.census.gov/data/acs/acs5/groups.html","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/FAMILIES_WITH_CHILDREN_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize ACS variables counting families by number of children — FAMILIES_WITH_CHILDREN_METADATA","title":"Categorize ACS variables counting families by number of children — FAMILIES_WITH_CHILDREN_METADATA","text":"data come table B11003, \"FAMILY TYPE PRESENCE AGE CHILDREN 18 YEARS\"","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/FAMILIES_WITH_CHILDREN_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize ACS variables counting families by number of children — FAMILIES_WITH_CHILDREN_METADATA","text":"","code":"FAMILIES_WITH_CHILDREN_METADATA"},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/FAMILIES_WITH_CHILDREN_METADATA.html","id":"families-with-children-metadata","dir":"Reference","previous_headings":"","what":"FAMILIES_WITH_CHILDREN_METADATA","title":"Categorize ACS variables counting families by number of children — FAMILIES_WITH_CHILDREN_METADATA","text":"data frame 12 rows 6 columns Group table, always \"B11003\" Variable full variable name, e.g. \"B11003_001E\" Index row variable table Adults adult(s) heading household Children 6 children 6 family? Childr 6-17 children 6-17 family?","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/FAMILIES_WITH_CHILDREN_METADATA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Categorize ACS variables counting families by number of children — FAMILIES_WITH_CHILDREN_METADATA","text":"https://api.census.gov/data/2022/acs/acs1/groups/B11003.html","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/GEOGRAPHY_HIERARCHY_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic levels of organization for data from the US Census Bureau's API — GEOGRAPHY_HIERARCHY_METADATA","title":"Geographic levels of organization for data from the US Census Bureau's API — GEOGRAPHY_HIERARCHY_METADATA","text":"Geographic levels organization data US Census Bureau's API","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/GEOGRAPHY_HIERARCHY_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic levels of organization for data from the US Census Bureau's API — GEOGRAPHY_HIERARCHY_METADATA","text":"","code":"GEOGRAPHY_HIERARCHY_METADATA"},{"path":"https://higherx4racine.github.io/hercacstables/reference/GEOGRAPHY_HIERARCHY_METADATA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geographic levels of organization for data from the US Census Bureau's API — GEOGRAPHY_HIERARCHY_METADATA","text":"tibble four columns Label short, title-case description geographic level Code three-digit code level Geography lowercase term used query API level Parent Geos character vector Geographies must specified query level.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/METADATA_ACS5.html","id":null,"dir":"Reference","previous_headings":"","what":"Group, Variable, and Geography information for the latest 5-Year ACS — METADATA_ACS5","title":"Group, Variable, and Geography information for the latest 5-Year ACS — METADATA_ACS5","text":"Group, Variable, Geography information latest 5-Year ACS","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/METADATA_ACS5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group, Variable, and Geography information for the latest 5-Year ACS — METADATA_ACS5","text":"","code":"METADATA_ACS5"},{"path":"https://higherx4racine.github.io/hercacstables/reference/METADATA_ACS5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Group, Variable, and Geography information for the latest 5-Year ACS — METADATA_ACS5","text":"list three items geography Available geographies ask API. groups group's ID, Universe, Description. variables variable's Group, full code, Details encodes.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/RACE_ETHNICITY_SUBTABLE_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Race and ethnicity codes and labels used by the U.S. Census Bureau — RACE_ETHNICITY_SUBTABLE_METADATA","title":"Race and ethnicity codes and labels used by the U.S. Census Bureau — RACE_ETHNICITY_SUBTABLE_METADATA","text":"Race ethnicity codes labels used U.S. Census Bureau","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/RACE_ETHNICITY_SUBTABLE_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Race and ethnicity codes and labels used by the U.S. Census Bureau — RACE_ETHNICITY_SUBTABLE_METADATA","text":"","code":"RACE_ETHNICITY_SUBTABLE_METADATA"},{"path":"https://higherx4racine.github.io/hercacstables/reference/RACE_ETHNICITY_SUBTABLE_METADATA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Race and ethnicity codes and labels used by the U.S. Census Bureau — RACE_ETHNICITY_SUBTABLE_METADATA","text":"tibble ten rows five columns: Census Race short description race ethnicity Suffix capital letter designating race ethnicity Inclusive Table name table includes people single multi-racial identities claim identity non-Hispanic row table B03002 counts people racial identity Hispanic ethnic identity Hispanic row table B03002 counts people racial identity Hispanic ethnic identity","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/STANDARD_OF_LIVING_METADATA.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorize ACS variables about income : poverty level ratios by family sustainability — STANDARD_OF_LIVING_METADATA","title":"Categorize ACS variables about income : poverty level ratios by family sustainability — STANDARD_OF_LIVING_METADATA","text":"data come table B17026, \"RATIO INCOME POVERTY LEVEL FAMILIES PAST 12 MONTHS.\" family-sustaining wage widely considered three times federal poverty level.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/STANDARD_OF_LIVING_METADATA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorize ACS variables about income : poverty level ratios by family sustainability — STANDARD_OF_LIVING_METADATA","text":"","code":"STANDARD_OF_LIVING_METADATA"},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/STANDARD_OF_LIVING_METADATA.html","id":"standard-of-living-metadata","dir":"Reference","previous_headings":"","what":"STANDARD_OF_LIVING_METADATA","title":"Categorize ACS variables about income : poverty level ratios by family sustainability — STANDARD_OF_LIVING_METADATA","text":"data frame 13 rows 6 columns Group table, always \"B17026\" Variable full variable name, e.g. \"B17026_001E\" Index row variable table Least Poverty Ratio lowest ratio income poverty level tier Greatest Poverty Ratio highest ratio income poverty level tier Standard Living One \"Everyone,\" \"Unsustainable,\" \"Self-sustaining\"","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/STANDARD_OF_LIVING_METADATA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Categorize ACS variables about income : poverty level ratios by family sustainability — STANDARD_OF_LIVING_METADATA","text":"https://api.census.gov/data/2022/acs/acs1/groups/B17026.html","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_is_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the local environment contains an expected constant defining an API key — api_key_is_set","title":"Check if the local environment contains an expected constant defining an API key — api_key_is_set","text":"Check local environment contains expected constant defining API key","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_is_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the local environment contains an expected constant defining an API key — api_key_is_set","text":"","code":"api_key_is_set()"},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_is_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the local environment contains an expected constant defining an API key — api_key_is_set","text":"TRUE key exists, FALSE otherwise","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_is_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the local environment contains an expected constant defining an API key — api_key_is_set","text":"","code":"api_key_is_set() #> [1] FALSE"},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Guide a new user at setting up a Census API key — api_key_setup","title":"Guide a new user at setting up a Census API key — api_key_setup","text":"works interactive mode. checks key already exists environment. key corresponds Sys.getenv(\"CENSUS_API_KEY\") order compatible tidycensus package. key exist prompts either go Census website (open browser window ) enter API key (typing pasting). sets value current environment saves .Renviron file user's HOME directory.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guide a new user at setting up a Census API key — api_key_setup","text":"","code":"api_key_setup()"},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guide a new user at setting up a Census API key — api_key_setup","text":"numeric status: 0 success, 1 quitting, 2 key exists.","code":""},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guide a new user at setting up a Census API key — api_key_setup","text":"","code":"api_key_setup() #> [1] 0"},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the current value of the local Census API key — api_key_value","title":"Get the current value of the local Census API key — api_key_value","text":"corresponds Sys.getenv(\"CENSUS_API_KEY\") order compatible tidycensus package.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the current value of the local Census API key — api_key_value","text":"","code":"api_key_value()"},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the current value of the local Census API key — api_key_value","text":"hexadecimal API token, empty string","code":""},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/api_key_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the current value of the local Census API key — api_key_value","text":"","code":"api_key_value() #> [1] \"\""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an API call to send to api.census.gov — build_api_url","title":"Create an API call to send to api.census.gov — build_api_url","text":"Create API call send api.census.gov","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an API call to send to api.census.gov — build_api_url","text":"","code":"build_api_url(   variables,   for_geo,   for_items,   survey_type,   table_or_survey_code,   year,   ...,   use_key = TRUE )"},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an API call to send to api.census.gov — build_api_url","text":"variables vector variable names, like \"B01001_001E\" for_geo geographical level data describe, e.g. \"tract\" for_items specific instances for_geo desired, e.g. \"*\" \"000200\" survey_type e.g. \"acs\" \"dec\" table_or_survey_code e.g. \"acs5\" \"pl\" year integer year, e.g. 2021L ... <dynamic dots> items pass query use_key optional, query include Census API key system environment. Defaults TRUE","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an API call to send to api.census.gov — build_api_url","text":"one URL, string","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an API call to send to api.census.gov — build_api_url","text":"","code":"hercacstables:::build_api_url(paste0(\"B25003_00\", 1:3, \"E\"),                               \"tract\",                               \"*\",                               \"acs\",                               \"acs5\",                               2020L,                               state = 55L,                               county = 101L,                               use_key = FALSE) #> [1] \"https://api.census.gov/data/2020/acs/acs5?get=B25003_001E%2CB25003_002E%2CB25003_003E&for=tract%3A%2A&in=state%3A55%20county%3A101\"  hercacstables:::build_api_url(paste0(\"P1_00\", c(1, 3, 4), \"N\"),                               \"tract\",                               \"*\",                               \"dec\",                               \"pl\",                               2020L,                               state = 55L,                               county = 101L,                               use_key = FALSE) #> [1] \"https://api.census.gov/data/2020/dec/pl?get=P1_001N%2CP1_003N%2CP1_004N&for=tract%3A%2A&in=state%3A55%20county%3A101\""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized Creation of Census ACS Variables — build_api_variable","title":"Vectorized Creation of Census ACS Variables — build_api_variable","text":"detail group variables format \"B000OO*_000E\", \"B\" \"E\" literal \"*\" race code.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized Creation of Census ACS Variables — build_api_variable","text":"","code":"build_api_variable(   group_code,   item_number,   race_code = \"\",   separator = \"_\",   suffix = \"E\" )"},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorized Creation of Census ACS Variables — build_api_variable","text":"group_code group code, like \"B18101\" item_number integer 0 999 race_code optional, either empty string one [..] separator optional, usually \"_\" ACS variables. suffix optional, usually \"E\" ACS variables, sometimes \"N\" decennial data.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorized Creation of Census ACS Variables — build_api_variable","text":"vector strings, variable name","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_api_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vectorized Creation of Census ACS Variables — build_api_variable","text":"","code":"groups <- c(\"B19013\", \"B18101\", \"B18101\") races <- c(\"\", \"\", \"I\") numbers <- 1 build_api_variable(groups, numbers, races) #> [1] \"B19013_001E\"  \"B18101_001E\"  \"B18101I_001E\""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_for_geographies.html","id":null,"dir":"Reference","previous_headings":"","what":"Use the for geography to specify the level that you are querying data for. — build_for_geographies","title":"Use the for geography to specify the level that you are querying data for. — build_for_geographies","text":"Use geography specify level querying data .","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_for_geographies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use the for geography to specify the level that you are querying data for. — build_for_geographies","text":"","code":"build_for_geographies(for_geo, ...)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_for_geographies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use the for geography to specify the level that you are querying data for. — build_for_geographies","text":"for_geo E.g. \"tract\" \"county subdivision\", want. ... <dynamic-dots> specific items search , items leave empty.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_for_geographies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use the for geography to specify the level that you are querying data for. — build_for_geographies","text":"list one element named \"key:value\" string","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_for_geographies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use the for geography to specify the level that you are querying data for. — build_for_geographies","text":"","code":"hercacstables:::build_for_geographies(\"block\") #> $`for` #> [1] \"block:*\" #>  hercacstables:::build_for_geographies(\"tract\", \"000400\", \"000500\") #> $`for` #> [1] \"tract:000400,000500\" #>"},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_in_geographies.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the part of a Census API query that describes containing geographies — build_in_geographies","title":"Create the part of a Census API query that describes containing geographies — build_in_geographies","text":"Create part Census API query describes containing geographies","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_in_geographies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the part of a Census API query that describes containing geographies — build_in_geographies","text":"","code":"build_in_geographies(...)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_in_geographies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the part of a Census API query that describes containing geographies — build_in_geographies","text":"... <dynamic-dots> key-value pairs like \"state=03\"","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_in_geographies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the part of a Census API query that describes containing geographies — build_in_geographies","text":"string ampersand-separated =geo:code pairs","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_in_geographies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the part of a Census API query that describes containing geographies — build_in_geographies","text":"","code":"hercacstables:::build_in_geographies(state=55, county = 101, barf=NULL) #> $`in` #> [1] \"state:55 county:101\" #>"},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_info_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the URL for JSON metadata about one table of ACS data — build_info_url","title":"Get the URL for JSON metadata about one table of ACS data — build_info_url","text":"complete URL, including protocol file extension, downloading metadata geographies, groups variables, specific variables.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_info_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the URL for JSON metadata about one table of ACS data — build_info_url","text":"","code":"build_info_url(.info_type, .year, .year_span)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_info_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the URL for JSON metadata about one table of ACS data — build_info_url","text":".info_type One \"geography\", \"groups\", \"variables\". .year integer year 2004 current year, inclusive. .year_span Either 1, 3, 5, depending upon desired time resolution.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_info_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the URL for JSON metadata about one table of ACS data — build_info_url","text":"string contains URL.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/build_info_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the URL for JSON metadata about one table of ACS data — build_info_url","text":"","code":"hercacstables:::build_info_url(\"groups\", 2021L, 5L) #> [1] \"https://api.census.gov/data/2021/acs/acs5/groups.json\""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_acs5_tract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull data from the 5-year American Community Survey — fetch_acs5_tract_data","title":"Pull data from the 5-year American Community Survey — fetch_acs5_tract_data","text":"default years span entire offering 5-year ACS data. variables probably available every year.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_acs5_tract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull data from the 5-year American Community Survey — fetch_acs5_tract_data","text":"","code":"fetch_acs5_tract_data(variables, state, county, years = 2009:2021L)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_acs5_tract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull data from the 5-year American Community Survey — fetch_acs5_tract_data","text":"variables character vector variables like \"B03002_001E\" state two-digit FIPS code state, like 55 Wisconsin county three-digit FIPS code county, like 101 Racine years, optional, years fetch data . Defaults 2009-2021","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_acs5_tract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull data from the 5-year American Community Survey — fetch_acs5_tract_data","text":"tibble year, vintage, tract, group, index, variable, value","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a set of data from the US Census API — fetch_data","title":"Download a set of data from the US Census API — fetch_data","text":"Download set data US Census API","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a set of data from the US Census API — fetch_data","text":"","code":"fetch_data(   variables,   year,   for_geo,   for_items,   survey_type,   table_or_survey_code,   ...,   use_key = TRUE )"},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a set of data from the US Census API — fetch_data","text":"variables vector variable names, like \"B01001_001E\" year integer year, e.g. 2021L for_geo geographical level data describe, e.g. \"tract\" for_items specific instances for_geo desired, e.g. \"*\" \"000200\" survey_type e.g. \"acs\" \"dec\" table_or_survey_code e.g. \"acs5\" \"pl\" ... <dynamic dots> items pass query use_key optional, query include Census API key system environment. Defaults TRUE","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a set of data from the US Census API — fetch_data","text":"tibble \"Group\", \"Index\", \"Value\", \"Year\" fields, well one field geography.","code":""},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_decennial_block_pops_by_race.html","id":null,"dir":"Reference","previous_headings":"","what":"Get decennial census estimates of per-block populations by race/ethnicity — fetch_decennial_block_pops_by_race","title":"Get decennial census estimates of per-block populations by race/ethnicity — fetch_decennial_block_pops_by_race","text":"function retrieves data tables splits people race Hispanic/Latin\\@ ethnicity.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_decennial_block_pops_by_race.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get decennial census estimates of per-block populations by race/ethnicity — fetch_decennial_block_pops_by_race","text":"","code":"fetch_decennial_block_pops_by_race(state, county)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_decennial_block_pops_by_race.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get decennial census estimates of per-block populations by race/ethnicity — fetch_decennial_block_pops_by_race","text":"state two-digit FIPS code state, e.g. 55L Wisconsin county three-digit FIPS code county within state, e.g. 101L Racine","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_decennial_block_pops_by_race.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get decennial census estimates of per-block populations by race/ethnicity — fetch_decennial_block_pops_by_race","text":"tibble four columns: Vintage decennial year, currently 2000, 2010, 2020 Race/Ethnicity OMB text descriptions Race/Ethnicities GEOID full FIPS code census block Population number people block year race/ethnicity","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_json_as_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a call to the Census API and convert the JSON response to an R list. — fetch_json_as_list","title":"Make a call to the Census API and convert the JSON response to an R list. — fetch_json_as_list","text":"Make call Census API convert JSON response R list.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_json_as_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a call to the Census API and convert the JSON response to an R list. — fetch_json_as_list","text":"","code":"fetch_json_as_list(   variables,   year,   for_geo,   for_items,   survey_type,   table_or_survey_code,   ...,   use_key = TRUE )"},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_json_as_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a call to the Census API and convert the JSON response to an R list. — fetch_json_as_list","text":"variables vector variable names, like \"B01001_001E\" year integer year, e.g. 2021L for_geo geographical level data describe, e.g. \"tract\" for_items specific instances for_geo desired, e.g. \"*\" \"000200\" survey_type e.g. \"acs\" \"dec\" table_or_survey_code e.g. \"acs5\" \"pl\" ... <dynamic dots> items pass query use_key optional, query include Census API key system environment. Defaults TRUE","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_json_as_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a call to the Census API and convert the JSON response to an R list. — fetch_json_as_list","text":"list items read json","code":""},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_metadata_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch metadata about a specific ACS data set from the Census API. — fetch_metadata_table","title":"Fetch metadata about a specific ACS data set from the Census API. — fetch_metadata_table","text":"function downloads large JSON object parses tibble.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_metadata_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch metadata about a specific ACS data set from the Census API. — fetch_metadata_table","text":"","code":"fetch_metadata_table(.info_type, .year, .year_span)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_metadata_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch metadata about a specific ACS data set from the Census API. — fetch_metadata_table","text":".info_type One \"geography\", \"groups\", \"variables\". .year integer year 2004 current year, inclusive. .year_span Either 1, 3, 5, depending upon desired time resolution.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/fetch_metadata_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch metadata about a specific ACS data set from the Census API. — fetch_metadata_table","text":"tibble.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/hercacstables-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hercacstables: Work with American Community Survey Tables through the US Census API — hercacstables-package","title":"hercacstables: Work with American Community Survey Tables through the US Census API — hercacstables-package","text":"American Community Survey (ACS) US Census's website returns data weirdly idiosyncratic way. many subtotals table. Grouping variables organized tree-like, rather tabular fashion. package intended make easy access use ACS data R.","code":""},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/hercacstables-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hercacstables: Work with American Community Survey Tables through the US Census API — hercacstables-package","text":"Maintainer: Ben Taft ben.taft@career2cradle.org","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/hercacstables.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools for parsing ACS data tables — hercacstables","title":"Tools for parsing ACS data tables — hercacstables","text":"Tools parsing ACS data tables","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/hoist_table_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Hoist details about a Census data group from a list of strings to separate columns — hoist_table_metadata","title":"Hoist details about a Census data group from a list of strings to separate columns — hoist_table_metadata","text":"Hoist details Census data group list strings separate columns","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/hoist_table_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hoist details about a Census data group from a list of strings to separate columns — hoist_table_metadata","text":"","code":"hoist_table_metadata(.metadata, .group, .fields)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/hoist_table_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hoist details about a Census data group from a list of strings to separate columns — hoist_table_metadata","text":".metadata table metadata Census API variables, e.g. hercacstables::METADATA_ACS5$variables .group code group, e.g. \"B01001\" .fields <chr[]> names new columns, e.g. c(\"Sex\", \"Age\")","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/hoist_table_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hoist details about a Census data group from a list of strings to separate columns — hoist_table_metadata","text":"new data frame columns","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/hoist_table_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hoist details about a Census data group from a list of strings to separate columns — hoist_table_metadata","text":"","code":"hoist_table_metadata(METADATA_ACS5$variables, \"B06002\", c(\"Median age\", \"Place of birth\")) #> # A tibble: 5 × 6 #>   Concept                     Group Index Variable `Median age` `Place of birth` #>   <chr>                       <chr> <int> <chr>    <chr>        <chr>            #> 1 Median Age by Place of Bir… B060…     1 B06002_… Median age   \"\"               #> 2 Median Age by Place of Bir… B060…     2 B06002_… Median age   \"Born in state … #> 3 Median Age by Place of Bir… B060…     3 B06002_… Median age   \"Born in other … #> 4 Median Age by Place of Bir… B060…     4 B06002_… Median age   \"Native; born o… #> 5 Median Age by Place of Bir… B060…     5 B06002_… Median age   \"Foreign born\""},{"path":"https://higherx4racine.github.io/hercacstables/reference/json_list_to_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of json objects from the census into a data frame — json_list_to_frame","title":"Convert a list of json objects from the census into a data frame — json_list_to_frame","text":"Convert list json objects census data frame","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/json_list_to_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of json objects from the census into a data frame — json_list_to_frame","text":"","code":"json_list_to_frame(.json_list)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/json_list_to_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of json objects from the census into a data frame — json_list_to_frame","text":".json_list list objects","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/json_list_to_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of json objects from the census into a data frame — json_list_to_frame","text":"tibble::tibble() column names taken list","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/margins_by_demography_and_place.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the relative contribution of different demographic groups to the populations of a set of areas. — margins_by_demography_and_place","title":"Determine the relative contribution of different demographic groups to the populations of a set of areas. — margins_by_demography_and_place","text":"Determine relative contribution different demographic groups populations set areas.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/margins_by_demography_and_place.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the relative contribution of different demographic groups to the populations of a set of areas. — margins_by_demography_and_place","text":"","code":"margins_by_demography_and_place(   block_data,   ...,   demography_field = \"Race/Ethnicity\",   place_field = \"Place\",   weight_field = \"Population\" )"},{"path":"https://higherx4racine.github.io/hercacstables/reference/margins_by_demography_and_place.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the relative contribution of different demographic groups to the populations of a set of areas. — margins_by_demography_and_place","text":"block_data tibble census data connects blocks enclosing geographic areas. ... <dynamic-dots> grouping fields data besides demography place demography_field optional, field identifies peoples' demographic group. Defaults \"Race/Ethnicity\" place_field optional, field denotes custom geographic areas. Defaults \"Place\" weight_field optional, field denotes counts. Defaults \"Population\"","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/margins_by_demography_and_place.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the relative contribution of different demographic groups to the populations of a set of areas. — margins_by_demography_and_place","text":"tibble proportions estimating per-demographic values per-tract data","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/pivot_and_separate.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a wide-formatted response from the Census API and convert it to long — pivot_and_separate","title":"Take a wide-formatted response from the Census API and convert it to long — pivot_and_separate","text":"Take wide-formatted response Census API convert long","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/pivot_and_separate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a wide-formatted response from the Census API and convert it to long — pivot_and_separate","text":"","code":"pivot_and_separate(.frame, ...)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/pivot_and_separate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a wide-formatted response from the Census API and convert it to long — pivot_and_separate","text":".frame data frame census columns named like B01001_001E ... <dynamic-dots> named regular expressions extracting fields column names","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/pivot_and_separate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a wide-formatted response from the Census API and convert it to long — pivot_and_separate","text":"pivoted data frames columns matched regular expression converted rows described extracted fields.","code":""},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/safe_api_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a census query into fewer than 50 variables per query — safe_api_query","title":"Split a census query into fewer than 50 variables per query — safe_api_query","text":"census API complains 50 variables per query.","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/safe_api_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a census query into fewer than 50 variables per query — safe_api_query","text":"","code":"safe_api_query(.x, max_per_query = 40, ...)"},{"path":"https://higherx4racine.github.io/hercacstables/reference/safe_api_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a census query into fewer than 50 variables per query — safe_api_query","text":".x tibble column called \"Variable\" max_per_query defaults 40 ... arguments build_api_url()","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/safe_api_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a census query into fewer than 50 variables per query — safe_api_query","text":"list JSON-formatted census replies.","code":""},{"path":[]},{"path":"https://higherx4racine.github.io/hercacstables/reference/subtract_parts_from_whole.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes a remainder values from measures of some subgroups and one all-group — subtract_parts_from_whole","title":"Computes a remainder values from measures of some subgroups and one all-group — subtract_parts_from_whole","text":"Computes remainder values measures subgroups one -group","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/subtract_parts_from_whole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes a remainder values from measures of some subgroups and one all-group — subtract_parts_from_whole","text":"","code":"subtract_parts_from_whole(   .data_frame,   grouping_column,   value_column,   whole_name,   part_names,   remainder_name )"},{"path":"https://higherx4racine.github.io/hercacstables/reference/subtract_parts_from_whole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes a remainder values from measures of some subgroups and one all-group — subtract_parts_from_whole","text":".data_frame input data grouping_column name column defines grouping value_column name column holds values whole_name level grouping signifies total part_names <chr[]> levels grouping remainder_name new name difference whole parts","code":""},{"path":"https://higherx4racine.github.io/hercacstables/reference/subtract_parts_from_whole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes a remainder values from measures of some subgroups and one all-group — subtract_parts_from_whole","text":"new data frame number columns extra rows new group level","code":""}]
